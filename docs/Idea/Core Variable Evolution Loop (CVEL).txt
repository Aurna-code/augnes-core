Core Variable Evolution Loop (CVEL)

**– Probabilistic Causal Graph–Driven, Self-Recursive Variable Selection Module for Augnes –**

---

## 0. Purpose & Philosophy

* **목표:**
  Augnes의 모든 판단·실험·정책 루프에 투입되는 “핵심 변수” 집합을
  확률적 인과그래프(PGM)와 자기판단·상태 피드백(JML/Self-State) 기반의
  **재귀 최적화 루프**로 관리한다.

* **철학:**
  변수는 단순한 입력이 아니라,
  **자기구조 변화와 세계모델 진화의 공진적 초점**이다.
  변수 진화는 실험·판단·개입 경험을 반영한
  **공진적 자기조직화 과정**이어야 한다.

---

## 1. 모듈 구조 (개요)

```
JML[Judgment Memory]
SSR[Self-State Logs]
EXP[Experiment Results]
DRF[Dynamic Resonance]
VARS[Core Variable Selector]
PGM[Probabilistic Causal Graph]
CEVL[Core Evolution Loop]
YAML[causal_vars.versioned.yaml]
GRAPH[causal_graph.yaml]

JML --> VARS
SSR --> VARS
EXP --> VARS
DRF --> VARS
VARS --> CEVL
CEVL --> PGM
PGM --> VARS
VARS --> YAML
VARS --> GRAPH
```

---

## 2. 주요 컴포넌트

| 컴포넌트                                 | 역할                           | 구현 포인트                  |
| ------------------------------------ | ---------------------------- | ----------------------- |
| **Judgment Memory (JML)**            | 판단 기록·실험 평가 결과 저장            | info gain, 실패/성공 원인분석   |
| **Self-State Logs**                  | 내부 상태 변화 기록                  | 상태클러스터 ↔ judgment 영향 매핑 |
| **Experiment Results**               | intervention·노이즈 실험 로그       | score, 안정성 변화 등         |
| **Dynamic Resonance**                | 노이즈 개입 시뮬레이션                 | 민감 변수 테스트               |
| **Probabilistic Causal Graph (PGM)** | 변수 인과관계/확률모델 저장·갱신           | DoWhy/causal-learn 연동   |
| **Core Variable Selector**           | 위 결과 통합, 가중치화하여 “핵심 변수” 산출   | 자동화 루프, 기준 유연화          |
| **Core Evolution Loop**              | 주기적(또는 트리거 기반) 변수 집합/PGM 재생성 | 히스토리, 롤백 지원             |
| **causal\_vars.versioned.yaml**      | 변수·가중치·근거 기록, 버전 관리          | 선택·탈락 히스토리화             |
| **causal\_graph.yaml**               | PGM 결과, 변수간 edge, meta정보 기록  | 변수 변경시 자동 갱신            |

---

## 3. 트리거·경량화·안전장치

### 3.1 트리거 조건 (Triggering Events)

* **성능 편차 감지:**

  * 최근 50회 판단 MAE 증가폭 ΔMAE > 0.05
  * 보상 표준편차 σᵣ > 0.10

* **데이터 드리프트 감지:**

  * 핵심 변수 PSI(Population Stability Index) > 0.2

* **외부 업데이트 감지:**

  * judgments.jsonl 1시간 내 100건 이상 갱신

* **트리거 발생 시:**
  매 판단 루프 후 트리거 함수 호출 → 조건 충족 시 CVEL 실행

### 3.2 경량화된 PGM 갱신

* 상위 N개(기본 5개) 변수만으로 부분적 PGM 재생성
* 기존 causal\_graph.yaml에서 subgraph만 갱신
* 병렬 워커, 최대 30초 타임아웃 적용

---

## 4. 변경 안전장치 (Guardrails)

* **한번에 최대 1개 변수 추가/삭제**
* 변수 변경 후 3회 판단 동안 추가 변경 불가
* 변경된 변수 집합으로 shadow 모드 100회 판단
* ΔMAE ≤ 0.01일 때만 실제 적용
* 실패시 자동 롤백

---

## 5. 전체 루프 실행 플로우 (의사코드)

```
def evolve_loop():
    # 1. 트리거 검사
    if not any([
        check_performance_drift(...),
        check_data_drift(...),
        check_jml_update(...)
    ]):
        return

    # 2. 변수 랭킹 & 상위 N개
    ranked = selector.rank_variables()
    top_n = ranked[:config.N]

    # 3. 부분 PGM 재생성
    updated_graph = selector.update_causal_graph(top_n)

    # 4. 핵심 변수 후보 산출
    candidates = selector.select_core_vars(updated_graph)

    # 5. 변경 전 shadow 테스트
    if shadow_test(candidates):
        # 6. 안전조건 충족 시 적용
        apply_new_vars(candidates)
        update_guardrail_counters()
        log_change(candidates)
    else:
        log("Shadow test failed, skip update")
```

---

## 6. 설정 파일 (config.yaml) 예시

evolution:
triggers:
mae\_delta: 0.05
reward\_std: 0.10
psi\_threshold: 0.2
jml\_updates: 100
ranking:
top\_n: 5
guardrails:
max\_changes\_per\_cycle: 1
freeze\_cycles: 3
shadow\_runs: 100
mae\_tolerance: 0.01
pgm:
timeout\_seconds: 30

---

## 7. 주요 I/O 및 메타 기록 예시

### (a) causal\_vars.versioned.yaml

* date: 2025-06-09
  selected\_vars:

  * name: prior\_error\_rate
    info\_gain: 0.21
    dr\_sensitivity: 0.18
    role: reward predictor
    reason: "Strong edge to reward; high MI in last 30 episodes"
  * name: retriever\_mode
    info\_gain: 0.18
    dr\_sensitivity: 0.31
    role: confounder
    reason: "Edge changed under state cluster shift"
    removed\_vars:
  * name: context\_length
    reason: "Low MI, edge removed in recent PGM"

---

## 8. 유지·진화 정책

* **루프 주기:**
  명시적 트리거 기반(성능, 데이터, 로그, 외부 변경 등)
* **롤백/재현:**
  버전 관리로 모든 변수/그래프/선정 근거 복구 가능
* **시각화:**
  causal\_dashboard.py 등에서 변수 변화·구조 시계열 제공
* **인간 피드백 통합:**
  수동 변수 변경 시 ‘human\_override’ 플래그 기록

---

## 9. 추가 보완: 단위 테스트 케이스 명세

### 9.1 트리거 테스트

* **성능 트리거**

  * MAE가 기준값 초과 시 CVEL이 실행되는지
* **데이터 드리프트**

  * PSI 임계 초과 변수 발생 시 CVEL이 동작하는지
* **로그 트리거**

  * judgment 로그 100건 갱신 시 loop 실행

### 9.2 가드레일 검증

* **freeze\_cycles**

  * 변수 변경 후 3회 이내엔 추가 변경 불가
* **shadow\_test**

  * shadow 모드 100회 실행 후 ΔMAE 기준 미만시만 적용
* **롤백**

  * shadow test 실패시 이전 변수·그래프 즉시 복구

### 9.3 부분 PGM·경량화

* **상위 N개만 갱신**

  * 전체 변수 집합이 아니라 랭킹 상위 N개만으로 PGM 생성되는지
* **타임아웃**

  * PGM 갱신 30초 내 미완료시 graceful exit

### 9.4 메타 기록

* **변수 선정 근거**

  * causal\_vars.versioned.yaml에 info\_gain, dr\_sensitivity 등 기록

---

## 10. 모니터링·알림 시스템

### 10.1 실시간 모니터링

* **대시보드**:

  * 변수 중요도 변화/PGM 구조 시계열 시각화
  * 트리거 발생 이력(성능/드리프트/로그) 자동 표출
  * 변경/롤백/동결 주기 상태 모니터링
  * (예시: Streamlit, Grafana)

### 10.2 알림·경보

* **트리거 이벤트 발생**

  * Slack·Email·시스템 로그 연동 (예시: notify\_on\_trigger(event\_type, details))
* **실패 경보**

  * shadow\_test 실패, PGM 타임아웃, 연속 2회 롤백 등 “위험 신호”시 즉시 알림

### 10.3 운영 로그 자동화

* **logs/cvel\_events.jsonl**

  * 트리거, 변수 변경, shadow\_test 결과, 롤백 등 모든 주요 이벤트 기록

---

## 11. 워크플로우 스케줄러 연동

* **스케줄러 옵션**

  * iCal, crontab, Airflow, Prefect 등과 연동 가능
* **예시**: Airflow DAG 내에서

  ```python
  from airflow import DAG
  from operators.cvel import run_cvel_loop

  with DAG('augnes_cvel', schedule_interval='0 * * * *') as dag:
      run_cvel_loop()
  ```
* **수동·이벤트 기반 실행도 지원**

  * 실험자/운영자가 즉시 트리거(Manual Trigger)
  * 외부 시스템 이벤트(새 데이터 도착, 실험 실패 등)와 연동

---

## 12. 기대 효과

* **변수 구조의 자기조직적 최적화**
* **설명력·투명성·재현성 강화**
* **판단·실험·정책 루프의 동적 적응성**

---

## 13. 요약

* **실행 기준·안전장치·운영 모니터링까지 아우르는 구조로 보강**
* **설계→코드→운영→테스트→알림의 전 사이클 관리 가능**
* **실패·오류·변화 모두 실시간 기록 및 감사 지원**

---

**(End of Document)**
